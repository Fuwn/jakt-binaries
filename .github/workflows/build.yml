name: 🏗 Build

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [ windows-latest, macos-latest, ubuntu-latest ]
        style: [ default ]
        rust:
          - stable
    
    runs-on: ${{ matrix.platform }}
    
    steps:
      - uses: actions/checkout@v2
      
      - name: 🛒 Checkout Jakt
        uses: actions/checkout@v2
        with:
          repository: SerenityOS/jakt
          ref: main
      
      - name: 🛠 Build Jakt
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      
      - name: 🚀 Upload Artifacts
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v2.2.4
        with:
          name: jakt-${{ matrix.platform }}
          path: target/release/jakt.exe
      
      - name: 🚀 Upload Artifacts to Action
        if: matrix.platform != 'windows-latest'
        uses: actions/upload-artifact@v2.2.4
        with:
          name: jakt-${{ matrix.platform }}
          path: target/release/jakt
      
      - name: 📦 Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
      
      - name: 💎 Upload Artifacts to Release
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/release/jakt.exe
          asset_name: jakt-${{ matrix.platform }}
          asset_content_type: application/octet-stream
      
      - name: 💎 Upload Artifacts to Release
        if: matrix.platform != 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/release/jakt
          asset_name: jakt-${{ matrix.platform }}
          asset_content_type: application/octet-stream
